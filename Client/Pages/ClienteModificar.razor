@page "/cliente/modificar/{Id:int}"
@using Act17.Shared.Models
@inject HttpClient http
@inject NavigationManager navegar

<h3>Modificar datos del cliente</h3>



<EditForm Model="elCliente" OnValidSubmit="Modificar">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="nombre" class="form-label">Nombre</label>
        <InputText id="nombre" class="form-control" @bind-Value="elCliente.Nombre" />
        <ValidationMessage For="(()=>elCliente.Nombre)" />
    </div>
    <div class="mb-3">
        <label for="correo" class="form-label">Correo</label>
        <InputText class="form-control" id="correo" @bind-Value="elCliente.Correo" />
        <ValidationMessage For="(()=>elCliente.Correo)" />
    </div>
    <div class="mb-3">
        <label for="telefono" class="form-label">Teléfono</label>
        <InputText class="form-control" id="telefono" @bind-Value="elCliente.Telefono" />
        <ValidationMessage For="(()=>elCliente.Telefono)" />
    </div>
    <button type="submit" class="btn btn-primary mx-2">Guardar</button>
    <button type="button" class="btn btn-danger" @onclick="Cancelar">Cancelar</button>

</EditForm>

@code {
[Parameter]
public int Id {get;set;}
    private Cliente elCliente = new Cliente();
    protected override async Task OnInitializedAsync()
    {
        elCliente = await http.GetFromJsonAsync<Cliente>($"api/clientes/{Id}");
    }
    private async void Modificar()

    {
        await http.PutAsJsonAsync($"api/clientes/{Id}", elCliente);
        navegar.NavigateTo("/clientes");
    }
    private void Cancelar()
    {
        navegar.NavigateTo("/clientes");
    }
}
