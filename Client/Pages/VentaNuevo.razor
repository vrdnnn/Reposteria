@page "/pedidos/nuevo"
@using Microsoft.AspNetCore.Components
@using Act17.Shared.Models
@inject HttpClient http
@inject NavigationManager navegar
<h3>Pedido nuevo</h3>
<EditForm Model="laVenta" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="clienteid" class="form-label"> cliente</label>
        <InputNumber class="form-control" id="clienteid" @bind-Value="laVenta.ClienteId" />
        <ValidationMessage For="(()=>laVenta.ClienteId)" />
    </div>

    <div class="mb-3">
        <label for="correo" class="form-label">Cantidad de productos</label>
        <InputNumber class="form-control" id="correo" @bind-Value="laVenta.Cantidad"  />
        <ValidationMessage For="(()=>laVenta.Cantidad)" />
    </div>
    <div class="mb-3">
        <label for="fecha" class="form-label">Fecha</label>
        <InputDate class="form-control" id="fecha" @bind-Value="laVenta.Fecha_venta" />
        <ValidationMessage For="(()=>laVenta.Fecha_venta)" />
    </div>


    <div class="mb-3">
        <label for="productos" class="form-label">Ids de los productos</label>
        <InputText class="form-control" id="productos" @bind-Value="ProductosString" />
    </div>

    <button type="submit" class="btn btn-primary mx-2">Guardar</button>
    <button type="button" class="btn btn-danger" @onclick="Cancelar">Cancelar</button>

</EditForm>

@code {
    private Pedido laVenta = new Pedido();
    private string ProductosString { get; set; }

    private async Task Guardar()
    {
        // Convertir la cadena de texto en una lista de enteros
        if (!string.IsNullOrEmpty(ProductosString))
        {
            laVenta.ProductoIds = ProductosString.Replace(" ", "")
                .Split(',')
                .Select(id => int.Parse(id.Trim()))
                .ToList();

            // Obtener los productos seleccionados desde la base de datos
            var productos = await http.GetFromJsonAsync<List<Producto>>("api/productoes");
            laVenta.Productos = productos.Where(p => laVenta.ProductoIds.Contains(p.ProductoId)).ToList();
        }
        // Calcular el monto total de la venta
        if (laVenta.Productos != null && laVenta.Productos.Any())
        {
            int montoTotal = laVenta.Productos.Sum(p => p.Precio ?? 0);
            laVenta.Monto = montoTotal * laVenta.Cantidad;
        }

        await http.PostAsJsonAsync("api/pedidoes", laVenta);
        navegar.NavigateTo("/pedidos");
    }
   


    private void Cancelar()
    {
        navegar.NavigateTo("/pedidos");
    }
  
}
